server.port=8070
logging.level.root=info
#jdbc
spring.datasource.password=123123
spring.datasource.username=root
#?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.url=jdbc:mysql://121.36.36.156:3306/SpringBootOnlineShop?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#数据库中下划线转驼峰
mybatis.configuration.map-underscore-to-camel-case=true
spring.mvc.view.prefix
mapper.identity=MYSQL
#dubbo的配置
#dubbo之间的消息协议有自己的协议名称
#zookeeper之间的消息协议有自己的协议名称
#dubbo的服务名称
#指定服务->Service是来自于那个容器(model)的
#spring.dubbo.application=user-service
dubbo.application.name=user-service
#dubbo的协议名称   rpc dubbo的通讯协议名
dubbo.protocol.name=dubbo
#spring.dubbo.protocol.name=dubbo
#spring.dubbo.protocol.port=20883
#dubbo 的注册中心
#zookeeper注册中心的地址
#zookeeper的访问地址
#zookeeper的默认端口号是2181
#spring.dubbo.registry.address=192.168.160.128:2181
dubbo.registry.address=//192.168.160.128:2181
#zookeeper的通讯协议名称
#spring.dubbo.registry.protocol=zookeeper
dubbo.registry.protocol=zookeeper
#dubbo的服务的扫描路径
#com.cuit.shop直接写这个  将来dubbo生成服务协议路径的时候都是一样的  避免同一个项目的服务路径不同而产生错误
#spring.dubbo.base-package=com.cuit.shop
dubbo.scan.base-packages=com.cuit.shop
dubbo.consumer.check=false